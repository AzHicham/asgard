pipeline {
    agent any
    parameters { 
        string(name: 'branch_name', defaultValue: 'master', description: 'branch name')
    }
    stages {
        stage('Remove navitia/asgard-build-deps images') {
            steps {
                sh "make remove-build-deps-image"
            }
        } 
        stage('Build App Image') {
            when {
                anyOf {
                    branch 'master'
                    branch 'release'
                }
            }
            steps {
                sh "git fetch --tags"
                sh "make build-app-image-${params.branch_name} TAG=`make get-app-${params.branch_name}-tag`"
            }
        }
        stage('Login') {
            steps {
                withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'kisio-docker-token', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
                    sh "make dockerhub-login DOCKERHUB_USER=${USERNAME} DOCKERHUB_PWD=${PASSWORD}"
                }
            }
        }
        stage('Tag release as latest and push it') {
            when {
                branch 'release'
            }
            steps {
                sh "docker tag navitia/asgard-app:`make get-app-${params.branch_name}-tag` navitia/asgard-app:latest"
                sh "docker push navitia/asgard-app:latest"
            }
        }
        stage('Push Asgard App Image') {
            steps {
                sh "make push-app-image TAG=`make get-app-${params.branch_name}-tag`"
            }
        }
        stage('Remove useless images') {
            steps {
                sh "make wipe-useless-images"
            }
        }
    }
    post {
        always {         
            deleteDir()
        }
    }
}

pipeline {
    agent any
    stages {
        stage('Build App Image From Master') {
            when {
                expression {
                    env.BRANCH_NAME == "jenkinsfiletest"
                }
            }
            steps {
		sh "make build-app-from-master"
            }
   	}
        stage('Login') {
            steps {
                withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'kisio-docker-token', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
                    sh "make dockerhub-login DOCKERHUB_USER=${USERNAME} DOCKERHUB_PWD=${PASSWORD}"
                }
            }
        }
        stage('Push Asgard App Image') {
            steps {
                // sh "make push-app-image TAG=${}"
                echo 'test push'
            }
        }
        stage('Delete') {
            steps {
                echo "delete all dangling and 'navitia/asgard-*' images"
                sh "docker rmi -f \$(docker images --filter 'dangling=true' -q --no-trunc) || true"
                sh "docker rmi -f \$(docker images 'navitia/asgard-*' -q)"
            }
        }
    }
    post {
        always {
	    sh "wipe-useless-images"
            deleteDir()
        }
    }
}

